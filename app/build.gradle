plugins {
    id 'com.android.application'
}

android {
    namespace 'de.techfak.se.gflorensia'
    compileSdk 34

    defaultConfig {
        applicationId "de.techfak.se.gflorensia"
        base.setArchivesName("gflorensia")
        minSdk 33
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    buildFeatures {
        viewBinding true
    }
}

dependencies {
    // Jackson Core for JSON processing
    implementation 'com.fasterxml.jackson.core:jackson-core:2.15.0'

    // Jackson Databind for converting JSON to and from Java objects
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.0'

    // Jackson Annotations (optional, used for annotations support in data classes)
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.15.0'
    implementation 'androidx.appcompat:appcompat:1.7.0'
    implementation 'com.google.android.material:material:1.12.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.preference:preference:1.2.1'
    implementation 'androidx.navigation:navigation-fragment:2.6.0'
    implementation 'androidx.navigation:navigation-ui:2.6.0'
    implementation 'androidx.activity:activity:1.8.0'
    implementation 'org.osmdroid:osmdroid-android:6.1.14'
    implementation  'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.2.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.6.1'
    implementation 'de.techfak.gse24:botlib:1.+'
    implementation 'org.openjfx:javafx-controls:20.0.2'
    testImplementation 'org.assertj:assertj-core:3.21.0'
}

tasks.register('javadocDebug', Javadoc) {
    dependsOn(tasks.processDebugResources)
    source = android.sourceSets.main.java.srcDirs
    destinationDir = new File(destinationDir.getPath(), "debug")
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += files(android.applicationVariants.collect { variant ->
        variant.getJavaCompileProvider().get().classpath.files
    })
    exclude '**/R.html', '**/R.*.html', '**/index.html'
}
afterEvaluate {
    tasks.register('javadocDebug', Javadoc) {
        dependsOn(tasks.processDebugResources)
        source = android.sourceSets.main.java.srcDirs
        destinationDir = file("$buildDir/docs/javadoc/debug")
        classpath = files(android.getBootClasspath()) + files(android.applicationVariants.collect { variant ->
            variant.javaCompileProvider.get().classpath.files
        })
        exclude '**/R.html', '**/R.*.html', '**/index.html'
    }
}